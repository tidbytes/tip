(* A program is simply one or more functions. The last function in a program is
   considered the "main" function and is called upon execution of the program.
   *)
program = <ow> (function <ow>)+

(* There are a bunch of syntactical tokens. The naming convention here is short
   and in blatant violation of most best practices. *)
b-open = "{"
b-close = "}"
p-open = "("
p-close = ")"
end = ";"

(* Operator list *)
0-op = "malloc"
1-op = "&" | "*"
2-op = "+" | "-" | "*" | "/" | "=="
op = 0-op | 1-op <ow> id | id <ow> 2-op <ow> id

(* Optional whitespace. *)
ow = #"\s*"

(* Mandatory whitespace. *)
ws = #"\s+"

(* A function has the form: id(arg1, arg2, ...) { vardec? statement* return }
   id and all args are of type id. Note that return is mandatory.
   *)
function = id <ow> <p-open> <ow> params <ow> <p-close> <ow> <b-open> <ow> vardec? <ow> statement* <ow> return <ow> <b-close>

(* A parameter list is zero or more comma-separated instances of id. *)
params = id? (<ow> <","> <ow> id)*

(* A variable declaration is a comma-separated list of all local variables.
   "Local" in this context is to be taken with a grain of salt; all variables
   must be globally unique. *)
vardec = <"var"> <ws> params <ow> <end>

return = <"return"> <ws> expression <ow> <end>

statement = <ow> id <ow> "=" <ow> expression <end> <ws>?

expression = id | constant | op

id = #"[a-zA-Z][a-zA-Z0-9_]*"

constant = #"0|[1-9][0-9]*"